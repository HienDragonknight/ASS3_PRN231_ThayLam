@model IdentityAjaxClient.Models.LoginViewModel
@{
    ViewData["Title"] = "Login";
}

<section class="vh-100" style="background-color: #9A616D;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-xl-10">
                <div class="card" style="border-radius: 1rem;">
                    <div class="row g-0">
                        <div class="col-md-6 col-lg-5 d-none d-md-block">
                            <img src="https://res.cloudinary.com/dqnkjok7p/image/upload/v1752633781/c2c1c375-d124-4e09-9d6e-9205cf48b86b_yq4uue.jpg"
                                 alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem;" />
                        </div>
                        <div class="col-md-6 col-lg-7 d-flex align-items-center">
                            <div class="card-body p-4 p-lg-5 text-black">
                                @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="d-flex align-items-center mb-3 pb-1">
                                        <i class="fas fa-cubes fa-2x me-3" style="color: #ff6219;"></i>
                                        <span class="h1 fw-bold mb-0">Orchid Store</span>
                                    </div>

                                    <h5 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Sign into your account</h5>

                                    <div class="form-outline mb-4">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", placeholder = "Email address", type = "email", required = "required" })
                                        @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-outline mb-4">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "Password", required = "required" })
                                        @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="pt-1 mb-4">
                                        <button class="btn btn-dark btn-lg btn-block" type="submit">Login</button>
                                    </div>

                                    @if (!ViewData.ModelState.IsValid)
                                    {
                                        <div class="alert alert-danger">
                                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                            {
                                                <div>@error.ErrorMessage</div>
                                            }
                                        </div>
                                    }

                                    <p class="mb-5 pb-lg-2" style="color: #393f81;">Don't have an account? <a asp-controller="Register" asp-action="Index" style="color: #393f81;">Register here</a></p>
                                    <a href="#" class="small text-muted">Terms of use.</a>
                                    <a href="#" class="small text-muted">Privacy policy</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
